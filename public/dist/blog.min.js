/*!
 * Start Bootstrap -  v1.0.0 ()
 * Copyright 2013-2017 Sky
 * Licensed under  ()
 */
$(function(){$("body").on("input propertychange",".floating-label-form-group",function(a){$(this).toggleClass("floating-label-form-group-with-value",!!$(a.target).val())}).on("focus",".floating-label-form-group",function(){$(this).addClass("floating-label-form-group-with-focus")}).on("blur",".floating-label-form-group",function(){$(this).removeClass("floating-label-form-group-with-focus")})}),jQuery(document).ready(function(a){if(a(window).width()>1170){var t=a("#mainNav").height();a(window).on("scroll",{previousTop:0},function(){var i=a(window).scrollTop();i<this.previousTop?i>0&&a("#mainNav").hasClass("is-fixed")?a("#mainNav").addClass("is-visible"):a("#mainNav").removeClass("is-visible is-fixed"):i>this.previousTop&&(a("#mainNav").removeClass("is-visible"),i>t&&!a("#mainNav").hasClass("is-fixed")&&a("#mainNav").addClass("is-fixed")),this.previousTop=i})}}),$("#myModal").on("show.bs.modal",function(a){var t=$(a.relatedTarget).data("url");$(this).find(".modal-footer a").attr("href",t)}),function(a){var t={init:function(a,i){return t.fillHtml(a,i),void t.bindEvent(a,i)},fillHtml:function(t,i){return function(t,i){var e="";i.currPage>1&&(e+="<li class='prev'><a href='javascript:void(0);'>&laquo;</a></li>"),i.currPage>=4&&4!=i.totalPage&&(e+="<li class='normal'><a href='javascript:void(0);'>1</a></li>"),i.currPage>4&&i.currPage<=i.totalPage&&i.totalPage>5&&(e+="<li><a href='javascript:void(0);'>...</a></li>");var o=i.currPage-2,r=i.currPage+2;for((o>1&&i.currPage<4||1==i.currPage)&&r++,i.currPage>i.totalPage-4&&i.currPage>=i.totalPage&&o--;o<=r;o++)o<=i.totalPage&&o>=1&&(o!=i.currPage?e+="<li class='normal'><a href='javascript:void(0);'>"+o+"</a></li>":e+="<li class='normal active'><a href='javascript:void(0);'>"+o+"</a></li>");i.currPage+2<i.totalPage-1&&i.currPage>=1&&i.totalPage>5&&(e+="<li><a href='javascript:void(0);'>...</a></li>"),i.currPage!=i.totalPage&&i.currPage<i.totalPage-2&&4!=i.totalPage&&(e+="<li class='normal'><a href='javascript:void(0);'>"+i.totalPage+"</a></li>"),i.currPage<i.totalPage&&(e+="<li class='next'><a href='javascript:void(0);'>&raquo;</a></li>"),a(t).find(".pagination").html(e)}(t,i)},bindEvent:function(i,e){return function(i,e){i.on("click","li.normal",function(o){var r=parseInt(a(this).text());t.fillHtml(i,{currPage:r,totalPage:e.totalPage}),"function"==typeof e.backFn&&e.backFn(r)}),i.on("click","li.prev",function(){var o=parseInt(a(this).parent().find("li.active>a").text());t.fillHtml(i,{currPage:o-1,totalPage:e.totalPage}),"function"==typeof e.backFn&&e.backFn(o-1)}),i.on("click","li.next",function(){var o=parseInt(a(this).parent().find("li.active>a").text());t.fillHtml(i,{currPage:o+1,totalPage:e.totalPage}),"function"==typeof e.backFn&&e.backFn(o+1)})}(i,e)}};a.fn.createPage=function(a){t.init(this,a)}}(jQuery),$("textarea").on("keydown",function(a){if(9==a.keyCode){a.preventDefault();var t=this.selectionStart,i=this.selectionEnd,e=window.getSelection().toString();e="    "+e.replace(/\n/g,"\n    "),this.value=this.value.substring(0,t)+e+this.value.substring(i),this.setSelectionRange(t+"    ".length,t+e.length)}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
